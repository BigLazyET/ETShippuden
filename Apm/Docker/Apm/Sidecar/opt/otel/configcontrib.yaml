receivers:
  dotnet_diagnostics:
    pid: $DOTNETPID
  otlp:
    protocols:
      grpc:
        endpoint: "localhost:4311"
      http:
        endpoint: "localhost:4312"
  # Dummy receiver that's never used, because a pipeline is required to have one.
  otlp/dummy:
    protocols:
      grpc:
        endpoint: "localhost:65530"
  # Collect own metrics
  # prometheus:
  #   config:
  #     scrape_configs:
  #     - job_name: 'otel-collector'
  #       scrape_interval: 10s
  #       static_configs:
  #       - targets: ['0.0.0.0:8889']
  # receiver_creator:
  #   watch_observers: [ host_observer ]
  #   receivers:
  #     dotnet_diagnostics:
  #       rule: type == "hostport" && process_name == "dotnet" && transport == "tcp"
  #       config:
  #         pid: "`process_id`"

processors:
  memory_limiter:
    check_interval: 1s
    limit_mib: 500
    spike_limit_mib: 100

  batch:
    send_batch_size: 1024
    timeout: 500ms
    send_batch_max_size: 8192

  # spanmetrics:
  #   metrics_exporter: otlp/spanmetrics
  #   latency_histogram_buckets: [1ms, 2ms, 3ms, 5ms, 7ms, 10ms, 50ms, 100ms, 200ms, 400ms, 800ms, 1s, 1400ms, 2s, 5s, 10s, 15s, 30s, 100s]
  #   dimensions:
  #     - name: host.name
  #       default: "${INSIP}"
  #     - name: deployment.environment
  #       default: "${DAOKEENV}"
  
  attributes/insert:
    actions:
      - key: "host.name"
        value: "${INSIP}"
        action: insert
      - key: "deployment.environment"
        value: "${DAOKEENV}"
        action: insert
      - key: "service.name"
        value: "${DAOKEAPPUK}"
        action: insert

  tail_sampling:
    decision_wait: 1s
    num_traces: 10000
    expected_new_traces_per_sec: 0
    policies:
      [
          {
            name: policy-1,
            type: numeric_attribute,
            numeric_attribute: {key: sampling.priority, min_value: 1, max_value: 1}
          }
      ]

exporters:
  logging:
    loglevel: warn

  file:
    path: /data/logs/collectmetric.json

  otlp:
    endpoint: localhost:4317
    tls:
      insecure: true

  otlphttp:
    endpoint: localhost:4318

  # otlp/spanmetrics:
  #   endpoint: localhost:4311
  #   tls:
  #     insecure: true

  otlp/dotnetmetrics:
    endpoint: localhost:4311
    tls:
      insecure: true
  
  # prometheus:
  #   endpoint: "0.0.0.0:8889"

service:
  pipelines:
    # traces:
    #   receivers: [otlp]
    #   processors: [memory_limiter, spanmetrics, tail_sampling, batch]
    #   exporters: [logging, otlp]
    metrics:
      receivers: [otlp]
      processors: [memory_limiter, batch]
      exporters: [logging, file, otlp]
    metrics/dotnet:
      receivers: [dotnet_diagnostics]
      processors: [attributes/insert]
      exporters: [otlp/dotnetmetrics]
    # logs:
    #   receivers: [otlp]
    #   processors: [memory_limiter, batch]
    #   exporters: [logging, otlp]

    # The exporter name must match the metrics_exporter name.
    # The receiver is just a dummy and never used; added to pass validation requiring at least one receiver in a pipeline.
    # metrics/spanmetrics:
    #   receivers: [otlp/dummy]
    #   exporters: [logging, otlp/spanmetrics]
  telemetry:
    # logs:
    #   level: debug
    #   initial_fields:
    #     service: my-instance
    metrics:
      # level: detailed
      address: 0.0.0.0:8889
